/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        screencap: screencap {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LC(LG(NUMBER_4)))>;
            label = "SCREENCAP";
        };

        nextwin: nextwin {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(GRAVE)>;
            label = "NEXTWIN";
        };

        priorwin: priorwin {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LG(GRAVE))>;
            label = "PRIORWIN";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "Base";
            bindings = <
&kp TAB    &kp Q        &kp W           &kp E           &kp R             &kp T        &kp Y    &kp U              &kp I            &kp O            &kp P           &kp BACKSPACE
&kp LCTRL  &mt LCTRL A  &mt LEFT_ALT S  &mt LEFT_GUI D  &mt LEFT_SHIFT F  &kp G        &kp H    &mt RIGHT_SHIFT J  &mt RIGHT_GUI K  &mt RIGHT_ALT L  &mt LCTRL SEMI  &kp SQT
&kp LSHFT  &kp Z        &kp X           &kp C           &kp V             &kp B        &kp N    &kp M              &kp COMMA        &kp DOT          &kp FSLH        &kp ESC
                                        &mo 2           &kp BACKSPACE     &kp SPACE    &kp RET  &kp SPACE          &mo 1
            >;
        };

        Arrows {
            display-name = "Arrows";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans      &trans     &kp UP_ARROW  &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans      &kp LEFT   &kp DOWN      &kp RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &screencap  &priorwin  &nextwin      &trans     &trans  &trans
                        &trans  &trans  &trans    &trans      &trans     &trans
            >;
        };

        num_sym {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Num/Sym";
            bindings = <
&kp TILDE  &kp LS(EXCL)  &kp LS(AT)  &kp HASH  &kp LS(DLLR)  &kp LS(PRCNT)    &kp LS(CARET)  &kp LS(AMPS)  &kp LS(STAR)  &kp LS(LPAR)  &kp LS(RPAR)  &kp MINUS
&kp GRAVE  &kp N1        &kp N2      &kp N3    &kp N4        &kp N5           &kp N6         &kp N7        &kp N8        &kp N9        &kp N0        &kp EQUAL
&trans     &trans        &trans      &trans    &trans        &trans           &trans         &kp LBKT      &kp RBKT      &kp LS(LBRC)  &kp LS(RBRC)  &kp BSLH
                                     &trans    &trans        &trans           &trans         &trans        &trans
            >;
        };

        setup {
            display-name = "Setup";
            bindings = <
&kp F1      &kp F2        &kp F3        &kp F4        &kp F5        &kp F6          &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans  &trans  &trans   &trans   &trans
&trans      &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans   &trans   &trans
                                        &trans        &trans        &trans          &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        awrup {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
